version: '3.1'

services: # containers. same as docker run.
  drupalrp:
    image: drupal:latest
    ports: 
      - '80:80'
    volumes: 
      - drupal-modules:/var/www/html/modules
      - drupal-profiles:/var/www/html/profiles
      - drupal-themes:/var/www/html/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - drupal-sites:/var/www/html/sites
  postgresrp:
    image: postgres
    environment:
      POSTGRES_DB: drupal
      POSTGRES_USER: user
      POSTGRES_PASSWORD: passw0rdda
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresdb:/var/lib/postgresql/data

  
volumes:
    drupal-modules:
    drupal-profiles:
    drupal-sites:
    drupal-themes:
    postgresdb:
  
 ## Example:
 # same as docker run -p 80:4000 -v $(pwd):/site bretfisher/jekyll-serve
 #
 # services:
 #    jekyll:
 #       image: bretfisher/jekyll-serve
 #       volume:
 #         - .:/site  (note: compose understands that . is the same as $(pwd)
 #       ports:
 #         - '80:4000'
